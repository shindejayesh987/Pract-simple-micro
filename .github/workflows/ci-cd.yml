name: CI/CD Pipeline

# Define the event that triggers the workflow
on:
  push:
    branches:
      - main # Trigger on push to the main branch
  pull_request:
    branches:
      - main # Trigger on pull request to the main branch
  workflow_dispatch: # Manual trigger

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies for linting
        run: |
          pip install pylint flask pymongo redis
      - name: Run Pylint
        run: pylint QuoteService/main.py

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies for testing
        run: |
          pip install pytest flask pymongo redis

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install Node.js dependencies
        run: npm install --prefix FrontendApplication
      - name: Build frontend with webpack
        run: npm run build --prefix FrontendApplication

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Deploy to your server (example with SSH)
        run: |
          # Example of SSH deployment
          ssh user@your-server 'bash -s' < deploy-script.sh
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send a Slack notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Completed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
